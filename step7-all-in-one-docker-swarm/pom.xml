<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <parent>
        <artifactId>from-zero-to-reactive-cloud-micro-hero</artifactId>
        <groupId>com.github.daggerok.hero</groupId>
        <version>1.0.3</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <name>${project.artifactId}</name>
    <groupId>com.github.daggerok.hero.step7</groupId>
    <artifactId>step7-all-in-one-docker-swarm</artifactId>
    <packaging>pom</packaging>

    <modules>
        <module>step7-sessions-rsocket-service-swarm</module>
        <module>step7-speakers-rest-api-service-swarm</module>
        <module>step7-frontend-swarm</module>
    </modules>

    <properties>
        <postgres-port>5432</postgres-port>
        <postgres-host>postgres</postgres-host>

        <frontend-port>8098</frontend-port>
        <frontend-host>step7-frontend-swarm</frontend-host>

        <sessions-port>8099</sessions-port>
        <sessions-host>step7-sessions-rsocket-service-swarm</sessions-host>

        <speakers-port>8100</speakers-port>
        <speakers-host>step7-speakers-rest-api-service-swarm</speakers-host>

        <docker-repository>daggerok</docker-repository>
    </properties>

    <build>
        <defaultGoal>clean package jib:build</defaultGoal>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.google.cloud.tools</groupId>
                    <artifactId>jib-maven-plugin</artifactId>
                    <version>${jib-maven-plugin.version}</version>
                    <configuration>
                        <allowInsecureRegistries>true</allowInsecureRegistries>
                        <!--
                        <containerizingMode>packaged</containerizingMode>
                        <container>
                            <appRoot>/tmp</appRoot>
                            <useCurrentTimestamp>true</useCurrentTimestamp>
                            <entrypoint>
                                <shell>ash</shell>
                                <option>-c</option>
                                <arg>java -jar /tmp/classpath/*.jar</arg>
                            </entrypoint>
                        </container>
                        -->
                        <from>
                            <image>openjdk:8u212-jre-alpine</image>
                        </from>
                        <to>
                            <image>localhost:5000/${docker-repository}/${project.parent.artifactId}-${project.artifactId}:${project.version}</image>
                        </to>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>com.dkanejs.maven.plugins</groupId>
                    <artifactId>docker-compose-maven-plugin</artifactId>
                    <configuration>
                        <composeFile>${project.basedir}/docker-compose.yml</composeFile>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <autoCreateCustomNetworks>true</autoCreateCustomNetworks>
                    <images>
                        <image>
                            <name>${docker-repository}/${postgres-host}:${project.version}</name>
                            <alias>${postgres-host}</alias>
                            <build>
                                <from>postgres:alpine</from>
                                <ports>
                                    <port>${postgres-port}</port>
                                </ports>
                                <env>
                                    <POSTGRES_DB>postgres</POSTGRES_DB>
                                    <POSTGRES_USER>postgres</POSTGRES_USER>
                                    <POSTGRES_PASSWORD>postgres</POSTGRES_PASSWORD>
                                    <POSTGRES_PORT>${postgres-port}</POSTGRES_PORT>
                                    <POSTGRES_HOST>${postgres-host}.${project.artifactId}</POSTGRES_HOST>
                                </env>
                                <healthCheck>
                                    <retries>9</retries>
                                    <timeout>3s</timeout>
                                    <interval>3s</interval>
                                    <startPeriod>3s</startPeriod>
                                    <cmd>pg_isready -h 127.0.0.1 -p ${postgres-port} -d $$POSTGRES_DB -U $$POSTGRES_USER</cmd>
                                </healthCheck>
                            </build>
                            <run>
                                <autoRemove>false</autoRemove>
                                <hostname>${postgres-host}</hostname>
                                <network>
                                    <mode>custom</mode>
                                    <name>${project.artifactId}</name>
                                    <alias>${postgres-host}</alias>
                                    <alias>${postgres-host}.${project.artifactId}</alias>
                                </network>
                                <ports>
                                    <port>${postgres-port}:${postgres-port}</port>
                                </ports>
                                <wait>
                                    <time>35000</time>
                                    <healthy>true</healthy>
                                </wait>
                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!-- mvn -pl step7-all-in-one-docker-swarm -P start-pg  -->
        <profile>
            <id>pg-start</id>
            <build>
                <defaultGoal>docker:build docker:start</defaultGoal>
            </build>
        </profile>
        <!-- mvn -pl step7-all-in-one-docker-swarm -P stop-pg  -->
        <profile>
            <id>pg-stop</id>
            <build>
                <defaultGoal>docker:stop docker:remove</defaultGoal>
            </build>
        </profile>
        <!-- mvn -pl step7-all-in-one-docker-swarm -P compose -->
        <profile>
            <id>compose-create</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <defaultGoal>resources:resources</defaultGoal>
                <resources>
                    <resource>
                        <directory>./templates</directory>
                        <filtering>true</filtering>
                    </resource>
                </resources>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>${maven-resources-plugin.version}</version>
                        <configuration>
                            <delimiters>
                                <delimiter>${*}</delimiter>
                            </delimiters>
                            <outputDirectory>./</outputDirectory>
                            <overwrite>true</overwrite>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- mvn -pl step7-all-in-one-docker-swarm -P up -->
        <profile>
            <id>compose-up</id>
            <build>
                <defaultGoal>docker-compose:up</defaultGoal>
            </build>
        </profile>
        <!-- mvn -pl step7-all-in-one-docker-swarm -P down -->
        <profile>
            <id>compose-down</id>
            <build>
                <defaultGoal>docker-compose:down</defaultGoal>
            </build>
        </profile>
    </profiles>

</project>
