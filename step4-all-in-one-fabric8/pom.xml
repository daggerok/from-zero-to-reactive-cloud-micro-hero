<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <parent>
        <artifactId>from-zero-to-reactive-cloud-micro-hero</artifactId>
        <groupId>com.github.daggerok.hero</groupId>
        <version>1.0.6</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <name>${project.artifactId}</name>
    <groupId>com.github.daggerok.hero.step4</groupId>
    <artifactId>step4-all-in-one-fabric8</artifactId>
    <packaging>pom</packaging>

    <modules>
        <module>step4-sessions-rsocket-service</module>
        <module>step4-speakers-rest-api-service</module>
        <module>step4-frontend</module>
    </modules>

    <properties>
        <postgres-host>step4-postgres</postgres-host>
        <postgres-port>5432</postgres-port>

        <speakers-host>step4-speakers-rest-api-service</speakers-host>
        <speakers-port>8091</speakers-port>

        <sessions-host>step4-sessions-rsocket-service</sessions-host>
        <sessions-port>8090</sessions-port>

        <frontend-host>step4-frontend</frontend-host>
        <frontend-port>8089</frontend-port>

        <docker-repository>daggerok</docker-repository>
        <docker-labels-maintainer>Maksim Kostromin https://github.com/daggerok</docker-labels-maintainer>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <autoCreateCustomNetworks>true</autoCreateCustomNetworks>
                    <images>
                        <!-- step4-postgres -->
                        <image>
                            <name>${docker-repository}/${postgres-host}:${project.version}</name>
                            <alias>${postgres-host}</alias>
                            <build>
                                <from>postgres:alpine</from>
                                <labels>
                                    <maintainer>${docker-labels-maintainer}</maintainer>
                                </labels>
                                <!--<tags>
                                    <tag>${project.version}</tag>
                                </tags>-->
                                <ports>
                                    <port>${postgres-port}</port>
                                </ports>
                                <env>
                                    <POSTGRES_PORT>${postgres-port}</POSTGRES_PORT>
                                    <POSTGRES_DB>postgres</POSTGRES_DB>
                                    <POSTGRES_USER>postgres</POSTGRES_USER>
                                    <POSTGRES_PASSWORD>postgres</POSTGRES_PASSWORD>
                                    <POSTGRES_HOST>${postgres-host}.${project.artifactId}</POSTGRES_HOST>
                                </env>
                                <healthCheck>
                                    <retries>9</retries>
                                    <timeout>3s</timeout>
                                    <interval>3s</interval>
                                    <startPeriod>3s</startPeriod>
                                    <cmd>pg_isready -h 127.0.0.1 -p ${postgres-port} -d $$POSTGRES_DB -U $$POSTGRES_USER</cmd>
                                </healthCheck>
                            </build>
                            <run>
                                <hostname>${postgres-host}</hostname>
                                <network>
                                    <mode>custom</mode>
                                    <name>${project.artifactId}</name>
                                    <alias>${postgres-host}</alias>
                                    <alias>${postgres-host}.${project.artifactId}</alias>
                                </network>
                                <ports>
                                    <port>${postgres-port}:${postgres-port}</port>
                                </ports>
                                <wait>
                                    <time>35000</time>
                                    <healthy>true</healthy>
                                </wait>
                            </run>
                        </image>
                        <!-- step4-sessions-rsocket-service -->
                        <image>
                            <name>${docker-repository}/${sessions-host}:${project.version}</name>
                            <alias>${sessions-host}</alias>
                            <build>
                                <from>${openjdk.image}</from>
                                <env>
                                    <SERVER_PORT>${sessions-port}</SERVER_PORT>
                                    <POSTGRES_DB>postgres</POSTGRES_DB>
                                    <POSTGRES_USER>postgres</POSTGRES_USER>
                                    <POSTGRES_PASSWORD>postgres</POSTGRES_PASSWORD>
                                    <POSTGRES_PORT>${postgres-port}</POSTGRES_PORT>
                                    <POSTGRES_HOST>${postgres-host}.${project.artifactId}</POSTGRES_HOST>
                                </env>
                                <labels>
                                    <maintainer>${docker-labels-maintainer}</maintainer>
                                </labels>
                                <ports>
                                    <port>${sessions-port}</port>
                                </ports>
                                <healthCheck>
                                    <timeout>3s</timeout><!-- Fail if no response after 3 seconds -->
                                    <startPeriod>5s</startPeriod><!-- Allow 5 seconds for the container to start before being flagged as unhealthy -->
                                    <cmd>wget --quiet --tries=1 --spider http://127.0.0.1:${sessions-port}/actuator/health || exit 1</cmd>
                                </healthCheck>
                                <assembly>
                                    <mode>dir</mode>
                                    <inline>
                                        <id>build-${sessions-host}</id>
                                        <files>
                                            <file>
                                                <source>${project.basedir}/${sessions-host}/target/${sessions-host}-${project.version}.jar</source>
                                                <destName>${sessions-host}.jar</destName>
                                            </file>
                                        </files>
                                    </inline>
                                    <name>.</name>
                                    <targetDir>/tmp</targetDir>
                                </assembly>
                                <workdir>/tmp</workdir>
                                <entryPoint>java -jar /tmp/${sessions-host}.jar</entryPoint>
                            </build>
                            <run>
                                <dependsOn>
                                    <container>${postgres-host}</container>
                                </dependsOn>
                                <imagePullPolicy>Never</imagePullPolicy>
                                <hostname>${sessions-host}</hostname>
                                <network>
                                    <mode>custom</mode>
                                    <name>${project.artifactId}</name>
                                    <alias>${sessions-host}</alias>
                                    <alias>${sessions-host}.${project.artifactId}</alias>
                                </network>
                                <ports>
                                    <port>${sessions-port}:${sessions-port}</port>
                                </ports>
                                <wait>
                                    <http>
                                        <url>http://127.0.0.1:${sessions-port}/actuator/health</url>
                                        <method>GET</method>
                                        <status>200..399</status>
                                    </http>
                                    <time>60000</time>
                                    <healthy>true</healthy>
                                </wait>
                            </run>
                        </image>
                        <!-- step4-speakers-rest-api-service -->
                        <image>
                            <name>${docker-repository}/${speakers-host}:${project.version}</name>
                            <alias>${speakers-host}</alias>
                            <build>
                                <from>${openjdk.image}</from>
                                <env>
                                    <SERVER_PORT>${speakers-port}</SERVER_PORT>
                                    <POSTGRES_DB>postgres</POSTGRES_DB>
                                    <POSTGRES_USER>postgres</POSTGRES_USER>
                                    <POSTGRES_PASSWORD>postgres</POSTGRES_PASSWORD>
                                    <POSTGRES_PORT>${postgres-port}</POSTGRES_PORT>
                                    <POSTGRES_HOST>${postgres-host}.${project.artifactId}</POSTGRES_HOST>
                                </env>
                                <labels>
                                    <maintainer>${docker-labels-maintainer}</maintainer>
                                </labels>
                                <ports>
                                    <port>${speakers-port}</port>
                                </ports>
                                <healthCheck>
                                    <timeout>3s</timeout>
                                    <startPeriod>5s</startPeriod>
                                    <cmd>wget --quiet --tries=1 --spider http://127.0.0.1:${speakers-port}/actuator/health || exit 1</cmd>
                                </healthCheck>
                                <assembly>
                                    <mode>dir</mode>
                                    <inline>
                                        <id>build-${speakers-host}</id>
                                        <files>
                                            <file>
                                                <source>${project.basedir}/${speakers-host}/target/${speakers-host}-${project.version}.jar</source>
                                                <destName>${speakers-host}.jar</destName>
                                            </file>
                                        </files>
                                    </inline>
                                    <name>.</name>
                                    <targetDir>/tmp</targetDir>
                                </assembly>
                                <workdir>/tmp</workdir>
                                <entryPoint>java -jar /tmp/${speakers-host}.jar</entryPoint>
                            </build>
                            <run>
                                <dependsOn>
                                    <container>${postgres-host}</container>
                                </dependsOn>
                                <imagePullPolicy>Never</imagePullPolicy>
                                <hostname>${speakers-host}</hostname>
                                <network>
                                    <mode>custom</mode>
                                    <name>${project.artifactId}</name>
                                    <alias>${speakers-host}</alias>
                                    <alias>${speakers-host}.${project.artifactId}</alias>
                                </network>
                                <ports>
                                    <port>${speakers-port}:${speakers-port}</port>
                                </ports>
                                <wait>
                                    <http>
                                        <url>http://127.0.0.1:${speakers-port}/actuator/health</url>
                                        <method>GET</method>
                                        <status>200..399</status>
                                    </http>
                                    <time>60000</time>
                                    <healthy>true</healthy>
                                </wait>
                            </run>
                        </image>
                        <!-- step4-frontend -->
                        <image>
                            <name>${docker-repository}/${frontend-host}:${project.version}</name>
                            <alias>step4-frontend</alias>
                            <build>
                                <from>${openjdk.image}</from>
                                <env>
                                    <SESSIONS_HOST>${sessions-host}.${project.artifactId}</SESSIONS_HOST>
                                    <SESSIONS_PORT>${sessions-port}</SESSIONS_PORT>
                                    <SPEAKERS_HOST>${speakers-host}.${project.artifactId}</SPEAKERS_HOST>
                                    <SPEAKERS_PORT>${speakers-port}</SPEAKERS_PORT>
                                    <SERVER_PORT>${frontend-port}</SERVER_PORT>
                                </env>
                                <labels>
                                    <maintainer>${docker-labels-maintainer}</maintainer>
                                </labels>
                                <ports>
                                    <port>${frontend-port}</port>
                                </ports>
                                <healthCheck>
                                    <timeout>3s</timeout>
                                    <startPeriod>5s</startPeriod>
                                    <cmd>wget --quiet --tries=1 --spider http://127.0.0.1:${frontend-port}/actuator/health || exit 1</cmd>
                                </healthCheck>
                                <assembly>
                                    <mode>dir</mode>
                                    <inline>
                                        <id>build-${frontend-host}</id>
                                        <files>
                                            <file>
                                                <source>${project.basedir}/${frontend-host}/target/${frontend-host}-${project.version}.jar</source>
                                                <destName>${frontend-host}.jar</destName>
                                            </file>
                                        </files>
                                    </inline>
                                    <name>.</name>
                                    <targetDir>/tmp</targetDir>
                                </assembly>
                                <workdir>/tmp</workdir>
                                <entryPoint>java -jar /tmp/${frontend-host}.jar</entryPoint>
                            </build>
                            <run>
                                <dependsOn>
                                    <container>${sessions-host}</container>
                                    <container>${speakers-host}</container>
                                </dependsOn>
                                <imagePullPolicy>Never</imagePullPolicy>
                                <hostname>${project.artifactId}</hostname>
                                <network>
                                    <mode>custom</mode>
                                    <name>${project.artifactId}</name>
                                    <alias>${frontend-host}</alias>
                                    <alias>${frontend-host}.${project.artifactId}</alias>
                                </network>
                                <ports>
                                    <port>${frontend-port}:${frontend-port}</port>
                                </ports>
                                <wait>
                                    <http>
                                        <url>http://127.0.0.1:${frontend-port}/actuator/health</url>
                                        <method>GET</method>
                                        <status>200..399</status>
                                    </http>
                                    <time>60000</time>
                                    <healthy>true</healthy>
                                </wait>
                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
